name: Maven CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.java'
      - 'pom.xml'
      - 'Dockerfile'
      - '.github/workflows/**/*.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.java'
      - 'pom.xml'
      - '.github/workflows/**/*.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Test with Maven
        run: mvn -B test

      - name: Test Coverage
        run: mvn -B verify

  semantic-release:
    runs-on: ubuntu-latest
    needs: [test]
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [ semantic-release ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/parcel-sre-challenge:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/parcel-sre-challenge:${{ needs.semantic-release.outputs.version != '' && needs.semantic-release.outputs.version || 'latest' }}

      - name: Inspect Image
        run: docker buildx imagetools inspect ${{ secrets.DOCKERHUB_USERNAME }}/parcel-sre-challenge:latest
